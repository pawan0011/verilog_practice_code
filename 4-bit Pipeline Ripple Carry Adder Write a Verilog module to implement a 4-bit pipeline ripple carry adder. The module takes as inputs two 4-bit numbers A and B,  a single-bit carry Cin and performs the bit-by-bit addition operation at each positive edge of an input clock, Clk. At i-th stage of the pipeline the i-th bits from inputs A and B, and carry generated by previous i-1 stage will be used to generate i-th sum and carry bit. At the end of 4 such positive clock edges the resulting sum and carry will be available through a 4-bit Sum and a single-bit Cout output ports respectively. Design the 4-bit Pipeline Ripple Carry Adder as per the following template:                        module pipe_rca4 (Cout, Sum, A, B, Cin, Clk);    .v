//4-bit Pipeline Ripple Carry Adder
//Write a Verilog module to implement a 4-bit pipeline ripple carry adder. The module takes as inputs two 4-bit numbers A and B,  a single-bit carry Cin and performs the bit-by-bit addition operation at each positive edge of an input clock, Clk. At i-th stage of the pipeline the i-th bits from inputs A and B, and carry generated by previous i-1 stage will be used to generate i-th sum and carry bit. At the end of 4 such positive clock edges the resulting sum and carry will be available through a 4-bit Sum and a single-bit Cout output ports respectively. Design the 4-bit Pipeline Ripple Carry Adder as per the following template:

                   //   module pipe_rca4 (Cout, Sum, A, B, Cin, Clk);


module pipe_rca4 (Cout, Sum, A, B, Cin, Clk);
 input [3:0]A,B;
 input Cin ,Clk;
 output reg [3:0] Sum;
 output reg Cout;
 reg L12_S0,L12_C0,L12_A1,L12_B1,L12_A2,L12_B2,L12_A3,L12_B3;
 reg L23_S0,L23_S1,L23_C1,L23_A2,L23_B2,L23_A3,L23_B3;
 reg L34_S0,L34_S1,L34_S2,L34_C2,L34_A3,L34_B3;
 //reg L45_S0,L45_S1,L45_S2,L45_S3,L45_C3;
  always @(posedge Clk)
   begin 
     L12_S0 <= A[0]^B[0]^Cin;
     L12_C0 <= A[0]*B[0]+B[0]*Cin+Cin*A[0];
     L12_A1 <= A[1];
     L12_B1 <= B[1];     // stage 1
     L12_A2 <= A[2];
     L12_B2 <= B[2];
     L12_A3 <= A[3];
     L12_B3 <= B[3];
   end
  always @(posedge Clk)
   begin
     L23_S0 <= L12_S0;
     L23_S1 <= L12_A1^ L12_B1 ^ L12_C0;
     L23_C1 <= L12_A1*L12_B1+L12_B1 * L12_C0+L12_C0*L12_A1;
     L23_A2 <= L12_A2;
     L23_B2 <= L12_B2;
     L23_A3 <= L12_A3;     // stage 2
     L23_B3 <= L12_B3;
    end
  always @(posedge Clk)
   begin 
    L34_S0 <= L23_S0;
    L34_S1 <= L23_S1;
    L34_S2 <= L23_A2 ^ L23_B2 ^ L23_C1;
    L34_C2 <= L23_A2 * L23_B2+L23_B2 * L23_C1+L23_C1*L23_A2;
    L34_A3 <= L23_A3;   // stage 3
    L34_B3 <= L23_B3;
   end
  always @(posedge Clk)
    begin 
    Sum[0] <= L34_S0;
    Sum[1] <= L34_S1;     // stage 4
    Sum[2] <= L34_S2;
    Sum[3] <= L34_A3 ^ L34_B3 ^ L34_C2;
    Cout <= L34_A3 * L34_B3+L34_B3 * L34_C2+L34_C2 * L34_A3;
    end
endmodule






    
